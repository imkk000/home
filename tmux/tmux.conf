# last term color
set -g monitor-activity on
set -g mouse on
set -g set-clipboard on
set -g repeat-time 250
set -g status-keys vi
set -g mode-keys vi
set -g status-position top
set -g allow-rename off
set -g default-terminal "screen-256color"

# set theme
source-file ~/.tmux/themes/tmux-tomorrow/tomorrow-night-bright.tmux

# bind key for reloading tmux config
bind -r r source-file ~/.tmux.conf
bind -r c command-prompt -p "window:" "new-window; rename-window '%%'"
bind -r S command-prompt -p "session:" "new-session -t '%%'"
bind -r R command-prompt -p "session:" "rename-session '%%'"
bind-key , command-prompt "rename-window '%%'"

# unbind right click menu
unbind -n MouseDown3Pane

# bind prefix key
unbind C-b
set -g prefix C-a

# bind key for splitting panes
unbind %
unbind \"
bind \- split-pane -v -c "#{pane_current_path}"
bind \\ split-pane -h -c "#{pane_current_path}"

# bind key for clear screen
bind C-k clear-history

# bind switch to prev/next window
unbind p
unbind n
bind -r p previous-window
bind -r n next-window

# bind key for killing window with repeat key
bind -r X kill-window
bind -r x kill-pane

# bind sync panes
bind C-c setw synchronize-panes

# bind join-pane h/v
bind \| join-pane -h
bind \_ join-pane -v

# tmux and vim navigator
is_vim='ps -o state= -o comm= -t "#{pane_tty}" | grep -iqE "^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$"'
bind-key -n "C-h" if-shell "$is_vim" "send-keys C-h" { if -F "#{pane_at_left}" "" "select-pane -L" }
bind-key -n "C-j" if-shell "$is_vim" "send-keys C-j" { if -F "#{pane_at_bottom}" "" "select-pane -D" }
bind-key -n "C-k" if-shell "$is_vim" "send-keys C-k" { if -F "#{pane_at_top}" "" "select-pane -U" }
bind-key -n "C-l" if-shell "$is_vim" "send-keys C-l" { if -F "#{pane_at_right}" "" "select-pane -R" }
bind-key -T copy-mode-vi "C-h" if -F "#{pane_at_left}" "" "select-pane -L"
bind-key -T copy-mode-vi "C-j" if -F "#{pane_at_bottom}" "" "select-pane -D"
bind-key -T copy-mode-vi "C-k" if -F "#{pane_at_top}" "" "select-pane -U"
bind-key -T copy-mode-vi "C-l" if -F "#{pane_at_right}" "" "select-pane -R"

bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "resize-pane -L 10"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "resize-pane -D 10"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "resize-pane -U 10"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "resize-pane -R 10"
bind-key -T copy-mode-vi M-h resize-pane -L 10
bind-key -T copy-mode-vi M-j resize-pane -D 10
bind-key -T copy-mode-vi M-k resize-pane -U 10
bind-key -T copy-mode-vi M-l resize-pane -R 10

# show status left and right
set -g status-justify left
set -g status-left-length 50
set -g status-left "#[fg=#eaeaea,bg=#2a2a2a] #{?client_prefix,A,-} #[fg=#70c0b1,bg=#000000] #S #[default]"
set -g status-right ''
set -g window-style 'bg=#1a1a1a'

# show pane title
set -g pane-border-lines heavy
set -g pane-border-status top
set -g pane-border-format '#(gitmux -cfg ~/.gitmux.conf "#{pane_current_path}")#[fg=blue]#(~/.tmux/modules/go.fish "#{pane_current_path}")'
set -g pane-border-style fg=#8c8c8c
set -g pane-active-border-style fg=#806600

# force transparency
set -g status-style bg=default
set -g pane-border-style fg=default
set -g pane-active-border-style fg=default
set -g window-status-style bg=default
set -g window-status-current-style bg=default
set -g status-left-style bg=default
set -g status-right-style bg=default

# set default yank
set -g @yank_selection_mouse 'clipboard'

# plugins
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-sensible"
set -g @plugin "tmux-plugins/tmux-yank"

run "~/.tmux/plugins/tpm/tpm"
